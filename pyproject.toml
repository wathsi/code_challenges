[tool.poetry]
name = "code_challenges"
version = "1.0.0"
description = "A collection of code challenges and solutions | May the force be with you"
authors = ["waanlabs"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.6.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
pytest-cov = "^4.1.0"
black = "^24.2.0"
fabric2 = "^3.2.2"
flake8 = "^7.0.0"
pylint = "^3.1.0"
mypy = "^1.8.0"
autoflake = "^2.3.0"
pydocstringformatter = "^0.7.3"
icecream = "^2.1.3"
bandit = "^1.7.8"
isort = "^5.13.2"
radon = "^6.0.1"
vulture = "^2.11"
pyroma = "^4.2"
pygount = "^1.6.1"
pympler = "^1.0.1"
snakeviz = "^2.2.0"

[tool.pydocstringformatter]
write = true
exclude = ["**/.venv/**"]
strip-whitespaces = true
split-summary-body = false

[tool.autoflake]
remove-all-unused-imports = true
expand-star-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true
in-place = false
recursive = true
exclude = ".venv,__init__.py"

[tool.isort]
py_version = 312
profile = "black"
line_length = 100
lines_before_imports = 1
lines_after_imports = 2
skip = [".venv", "__init__.py"]

[tool.black]
target-version = ['py312']
exclude = "/(__init__.py|\\.git|\\.devcontainer|\\.github|\\.mypy_cache|\\.pytest_cache|\\.venv|__pycache__)/"

[tool.flake8]
count = true
hang-closing = true
max-line-length = 100
max-doc-length = 100
indent-size = 4
statistics = true
jobs = "auto"
doctests = true
max-complexity = 15
extend-ignore = "W503"
select = "E,W,F,C"
exclude = [".git", "__pycache__", ".pytest_cache", ".venv"]
ignore = ["E133", "W503"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
